/* Generated by IBExpert 06.08.2002 8:15:27*/

SET SQL DIALECT 3;

SET NAMES WIN1251;

CREATE DATABASE 'C:\Program Files\Borland\Delphi6\Projects\Matias\DB\MATIAS.GDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 1024
DEFAULT CHARACTER SET NONE;



/****************************************************************************/
/*                               Domains                                    */
/****************************************************************************/

CREATE DOMAIN BOOL AS
INTEGER
 DEFAULT 1
CHECK (VALUE IN (0,1));

CREATE DOMAIN D_CASHE AS
NUMERIC(15,4);

CREATE DOMAIN D_COUNTS AS
NUMERIC(5,2)
NOT NULL;

CREATE DOMAIN D_FIRM_NAME AS
VARCHAR(40)
NOT NULL;

CREATE DOMAIN D_ID AS
INTEGER;

CREATE DOMAIN D_MONTH AS
INTEGER
NOT NULL
CHECK (VALUE IN (1,2,3,4,5,6,7,8,9,10,11,12));

CREATE DOMAIN D_OPERATION_NAME AS
VARCHAR(100)
NOT NULL;

CREATE DOMAIN D_OPERATION_TYPE AS
INTEGER
NOT NULL
CHECK (VALUE IN (1,2));

CREATE DOMAIN D_PERSONAL_NAME AS
VARCHAR(40)
NOT NULL;

CREATE DOMAIN D_PERSONAL_NR AS
INTEGER
NOT NULL;

CREATE DOMAIN D_TIMENORM AS
NUMERIC(7,3)
NOT NULL;

CREATE DOMAIN D_YEAR AS
INTEGER
NOT NULL
CHECK (VALUE > 2000);



/****************************************************************************/
/*                              Generators                                  */
/****************************************************************************/

CREATE GENERATOR DETAIL_ORDER;
SET GENERATOR DETAIL_ORDER TO 8;

CREATE GENERATOR "Firms";
SET GENERATOR "Firms" TO 46;

CREATE GENERATOR "Operation";
SET GENERATOR "Operation" TO 5942;

CREATE GENERATOR "Order";
SET GENERATOR "Order" TO 64636;

CREATE GENERATOR "Personal";
SET GENERATOR "Personal" TO 1818;



SET TERM ^ ; 



/****************************************************************************/
/*                            Stored Procedures                             */
/****************************************************************************/

CREATE PROCEDURE GET_NEW_ID (
    TABLE_NAME VARCHAR(25))
RETURNS (
    ID INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE MONTH_STR (
    MONTH_D INTEGER)
RETURNS (
    RESULT VARCHAR(10))
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE OPERATION_TYPE_STR (
    OPERATION_TYPE INTEGER)
RETURNS (
    STR_OPERATION VARCHAR(20))
AS
BEGIN
  EXIT;
END^



SET TERM ; ^


/****************************************************************************/
/*                                  Tables                                  */
/****************************************************************************/

CREATE TABLE FIRMS (
    ID D_ID NOT NULL,
    FIRMNAME D_FIRM_NAME NOT NULL);

CREATE TABLE OPERATION (
    ID D_ID NOT NULL,
    OPERATION_NAME D_OPERATION_NAME,
    CASHE D_CASHE,
    OPERATION_TYPE D_OPERATION_TYPE,
    TIMENORM D_TIMENORM NOT NULL);

CREATE TABLE ORDERS (
    ID D_ID NOT NULL,
    PERSONAL_ID D_ID,
    OPERATION_ID D_ID,
    ORDER_YEAR D_YEAR NOT NULL,
    ORDER_MONTH D_MONTH NOT NULL,
    COUNTS D_COUNTS,
    TOTAL D_CASHE NOT NULL,
    DAYOFF BOOL);

CREATE TABLE PERSONAL (
    ID D_ID NOT NULL,
    PERSONAL_NR D_PERSONAL_NR NOT NULL,
    PERSONAL_NAME D_PERSONAL_NAME NOT NULL,
    DATE_IN DATE NOT NULL,
    DATE_OUT DATE,
    FIRMS_ID D_ID NOT NULL);





/****************************************************************************/
/*                            Unique Constraints                            */
/****************************************************************************/

ALTER TABLE FIRMS ADD CONSTRAINT UNQ_FIRMS UNIQUE (FIRMNAME);
ALTER TABLE OPERATION ADD CONSTRAINT UNQ_OPERATION UNIQUE (OPERATION_NAME);
ALTER TABLE PERSONAL ADD CONSTRAINT UNQ_PERSONAL UNIQUE (PERSONAL_NR);


/****************************************************************************/
/*                            Primary Keys                                  */
/****************************************************************************/

ALTER TABLE FIRMS ADD CONSTRAINT PK_FIRMS PRIMARY KEY (ID);
ALTER TABLE OPERATION ADD CONSTRAINT PK_OPERATION PRIMARY KEY (ID);
ALTER TABLE ORDERS ADD CONSTRAINT PK_ORDERS PRIMARY KEY (ID);
ALTER TABLE PERSONAL ADD CONSTRAINT PK_PERSONAL PRIMARY KEY (ID);


/****************************************************************************/
/*                               Foreign Keys                               */
/****************************************************************************/

ALTER TABLE ORDERS ADD CONSTRAINT FK_ORDERS FOREIGN KEY (PERSONAL_ID) REFERENCES PERSONAL (ID);
ALTER TABLE ORDERS ADD CONSTRAINT FK_ORDERS2 FOREIGN KEY (OPERATION_ID) REFERENCES OPERATION (ID);
ALTER TABLE PERSONAL ADD CONSTRAINT FK_PERSONAL FOREIGN KEY (FIRMS_ID) REFERENCES FIRMS (ID);


/****************************************************************************/
/*                            Stored Procedures                             */
/****************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE GET_NEW_ID (
    TABLE_NAME VARCHAR(25))
RETURNS (
    ID INTEGER)
AS
BEGIN
   if ( UPPER(:TABLE_NAME) = 'FIRMS') THEN ID = GEN_ID("Firms",1);
   if ( UPPER(:TABLE_NAME) = 'OPERATION') THEN ID = GEN_ID("Operation",1);
   if ( UPPER(:TABLE_NAME) = 'ORDERS') THEN ID = GEN_ID("Order",1);
   if ( UPPER(:TABLE_NAME) = 'PERSONAL') THEN ID = GEN_ID("Personal",1);
   if ( UPPER(:TABLE_NAME) = 'DETAIL_ORDER') THEN ID = GEN_ID(DETAIL_ORDER,1);
END
^

ALTER PROCEDURE MONTH_STR (
    MONTH_D INTEGER)
RETURNS (
    RESULT VARCHAR(10))
AS
begin
  if (MONTH_D=1) then RESULT='Январь';
  if (MONTH_D=2) then RESULT='Февраль';
  if (MONTH_D=3) then RESULT='Март';
  if (MONTH_D=4) then RESULT='Апрель';
  if (MONTH_D=5) then RESULT='Май';
  if (MONTH_D=6) then RESULT='Июнь';
  if (MONTH_D=7) then RESULT='Июль';
  if (MONTH_D=8) then RESULT='Август';
  if (MONTH_D=9) then RESULT='Сентябрь';
  if (MONTH_D=10) then RESULT='Октябрь';
  if (MONTH_D=11) then RESULT='Ноябрь';
  if (MONTH_D=12) then RESULT='Декабрь';
  suspend;
end
^

ALTER PROCEDURE OPERATION_TYPE_STR (
    OPERATION_TYPE INTEGER)
RETURNS (
    STR_OPERATION VARCHAR(20))
AS
begin
  if (OPERATION_TYPE=1) then STR_OPERATION='По нарядам';
  if (OPERATION_TYPE=2) then STR_OPERATION='Цеховые';
  if (OPERATION_TYPE>2) then STR_OPERATION='';
  suspend;
end
^


SET TERM ; ^


/****************************************************************************/
/*                               Descriptions                               */
/****************************************************************************/

DESCRIBE DOMAIN BOOL
'Определение булевой переменной
';

