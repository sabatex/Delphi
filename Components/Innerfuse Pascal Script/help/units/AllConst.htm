<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<META name="GENERATOR" content="DIPasDoc 0.8.6">
<TITLE>Innerfuse Pascal Script: All Constants</TITLE>
<LINK rel="StyleSheet" href="Help.css">
</HEAD>
<BODY bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#800080" alink="#FF0000">
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="e0e0e0">
<TD><A href="AllUnits.htm"><CENTER>Units</CENTER></A></TD>
<TD><A href="AllClasH.htm"><CENTER>Class Hierarchy</CENTER></A></TD>
<TD><A href="AllClass.htm"><CENTER>Classes, Interfaces and Objects</CENTER></A></TD>
<TD><A href="AllTypes.htm"><CENTER>Types</CENTER></A></TD>
<TD><A href="AllVaria.htm"><CENTER>Variables</CENTER></A></TD>
<TD><A href="AllConst.htm"><CENTER>Constants</CENTER></A></TD>
<TD><A href="AllFuncs.htm"><CENTER>Functions and Procedures</CENTER></A></TD>
<TD><A href="AllIdent.htm"><CENTER>Identifiers</CENTER></A></TD>
</TR>
</TABLE>
<H1>All Constants</H1>
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="#e0e0e0"><TH>Name</TH><TH>Unit</TH><TH>Description</TH></TR> 
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btArray">btArray</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD width=100%>An array</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btChar">btChar</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>a Char (1 byte)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btClass">btClass</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>class</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btCurrency">btCurrency</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Currency</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btDouble">btDouble</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 8 byte float (double)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btEnum">btEnum</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Compile time enumeration; This will be a btu32 when compiled</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btExtended">btExtended</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 10 byte float (extended)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btInterface">btInterface</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Interface</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btPChar">btPChar</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A PChar (internally the same as a string)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btPointer">btPointer</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A pointer</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btProcPtr">btProcPtr</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Compile time procedural pointer (will be btu32 when compiled)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btRecord">btRecord</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A record</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btResourcePointer">btResourcePointer</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A resource pointer: Variable that can contain things from outside the script engine</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btReturnAddress">btReturnAddress</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Executer internal type for return addresses, can not be used as a type</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btS16">btS16</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 2 byte signed integer (smallint)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btS32">btS32</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 4 byte signed integer (Integer/Longint)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btS64">btS64</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>An 8 byte signed integer (int64)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btS8">btS8</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 1 byte signed integer (Shortint)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btSet">btSet</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Set</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btSingle">btSingle</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 4 byte float (single)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btStaticArray">btStaticArray</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Static array</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btString">btString</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btType">btType</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Compile time: a type</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btU16">btU16</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 2 byte unsigned integer (word)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btU32">btU32</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 4 byte unsigned integer (cardinal/longword)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btU8">btU8</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A 1 byte unsigned integer (byte)</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btVariant">btVariant</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A variant</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btWideChar">btWideChar</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A widechar</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#btWideString">btWideString</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>A wide string</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#cdCdecl">cdCdecl</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Alias to <CODE>ifps3utl.cdCdecl</CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="IFPS3CompExec.htm#CdCdecl">CdCdecl</A></TD>
<TD><A href="IFPS3CompExec.htm">IFPS3CompExec</A></TD>
<TD>alias to <CODE><A href="ifps3.htm#cdCdecl">cdCdecl</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="IFPS3CompExec.htm#cdPascal">cdPascal</A></TD>
<TD><A href="IFPS3CompExec.htm">IFPS3CompExec</A></TD>
<TD>alias to <CODE><A href="ifps3.htm#cdPascal">cdPascal</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#cdPascal">cdPascal</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Alias to <CODE>ifps3utl.cdPascal</CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="IFPS3CompExec.htm#cdRegister">cdRegister</A></TD>
<TD><A href="IFPS3CompExec.htm">IFPS3CompExec</A></TD>
<TD>alias to <CODE><A href="ifps3.htm#cdRegister">cdRegister</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#cdRegister">cdRegister</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Alias to <CODE>ifps3utl.cdRegister</CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="IFPS3CompExec.htm#CdStdCall">CdStdCall</A></TD>
<TD><A href="IFPS3CompExec.htm">IFPS3CompExec</A></TD>
<TD>alias to <CODE><A href="ifps3.htm#cdStdCall">cdStdCall</A></CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#cdStdCall">cdStdCall</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Alias to <CODE>ifps3utl.cdStdCall</CODE></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_A">CM_A</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Assign command<br> Command: TIFPSCommand;<br> VarDest, // no data<br> VarSrc: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_bn">cm_bn</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Boolean NOT<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_C">Cm_C</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Call<br> Command: TIFPSCommand; <br> ProcNo: Longword;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_CA">CM_CA</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Calculate Command<br> Command: TIFPSCommand; <br> CalcType: Byte;<br> <i><br> 0 = +<br> 1 = -<br> 2 = *<br> 3 = /<br> 4 = MOD<br> 5 = SHL<br> 6 = SHR<br> 7 = AND<br> 8 = OR<br> 9 = XOR<br> </i><br> VarDest, // no data<br> VarSrc: TIFPSVariable;<br> <br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_CG">Cm_CG</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Conditional Goto<br> Command: TIFPSCommand; <br> NewPosition: LongWord; //relative to end of this instruction<br> Var: TIFPSVariable; // no data<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_CNG">Cm_CNG</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Conditional NOT Goto<br> Command: TIFPSCommand; <br> NewPosition: LongWord; // relative to end of this instruction<br> Var: TIFPSVariable; // no data<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_CO">CM_CO</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Compare<br> Command: TIFPSCommand; <br> CompareType: Byte;<br> <i><br> 0 = &gt;=<br> 1 = &lt;=<br> 2 = &gt;<br> 3 = &lt;<br> 4 = &lt;&gt<br> 5 = =<br> <i><br> IntoVar: TIFPSAssignment;<br> Compare1, Compare2: TIFPSAssigment;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_cv">Cm_cv</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Call Var<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_dec">cm_dec</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Dec<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_fg">cm_fg</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Flag Goto<br> Command: TIFPSCommand; <br> Where: Cardinal;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_G">Cm_G</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Goto<br> Command: TIFPSCommand; <br> NewPosition: Longint; //relative to end of this instruction<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_in">cm_in</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Integer NOT<br> Command: TIFPSCommand; <br> Where: Cardinal;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_inc">cm_inc</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Inc<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_nop">cm_nop</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: nop<br> Command: TIFPSCommand; <br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_P">CM_P</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Push<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_PO">CM_PO</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Pop<br> Command: TIFPSCommand; <br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_poexh">cm_poexh</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Pop Exception Handler<br> Command:TIFPSCommand; <br> Position: Byte;<br> <i> 0 = end of try/finally/exception block;<br> 1 = end of first finally<br> 2 = end of except<br> 3 = end of second finally<br> </i><br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_Pt">Cm_Pt</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Push Type<br> Command: TIFPSCommand; <br> FType: LongWord;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_puexh">cm_puexh</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Push Exception Handler<br> Command: TIFPSCommand; <br> FinallyOffset,<br> ExceptionOffset, // FinallyOffset or ExceptionOffset need to be set.<br> Finally2Offset,<br> EndOfBlock: Cardinal;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#CM_PV">CM_PV</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Push Var<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_R">Cm_R</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Ret<br> Command: TIFPSCommand; <br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_sf">cm_sf</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Set Flag<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;<br> DoNot: Boolean;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_sp">cm_sp</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Set Pointer<br> Command: TIFPSCommand; <br> VarDest: TIFPSVariable;<br> VarSrc: TIFPSVariable;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_spc">cm_spc</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Set Stack Pointer To Copy<br> Command: TIFPSCommand; <br> Where: Cardinal;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#Cm_ST">Cm_ST</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Set Stack Type<br> Command: TIFPSCommand; <br> NewType: LongWord;<br> OffsetFromBase: LongWord;<br></TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#cm_vm">cm_vm</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Script internal command: Var Minus<br> Command: TIFPSCommand; <br> Var: TIFPSVariable;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#ENoError">ENoError</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>&nbsp;</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#FCapacityInc">FCapacityInc</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The Capacity increment that list uses</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#FMaxCheckCount">FMaxCheckCount</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The maximum number of "resize" operations on the list before it's recreated</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSAddrNegativeStackStart">IFPSAddrNegativeStackStart</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Start of the negative stack</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSAddrStackStart">IFPSAddrStackStart</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Start of the positive stack</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSCurrentBuildNo">IFPSCurrentBuildNo</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The current build of the compiler and executer.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSCurrentversion">IFPSCurrentversion</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The current version of the script engine</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSLowBuildSupport">IFPSLowBuildSupport</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The lowest supported build by the executer.</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSMainProcName">IFPSMainProcName</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The name of the main proc</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSMainProcNameOrg">IFPSMainProcNameOrg</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The original name for the main proc, can be used for user purposes</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#IFPSValidHeader">IFPSValidHeader</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>The header of a compiled IFPS3 binary must start with this</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3.htm#InvalidVal">InvalidVal</A></TD>
<TD><A href="ifps3.htm">ifps3</A></TD>
<TD>Invalid results</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifpscomp.htm#InvalidVal">InvalidVal</A></TD>
<TD><A href="ifpscomp.htm">ifpscomp</A></TD>
<TD>Invalid value, this is returned by most functions of IFPS3 that return a cardinal, when they fail</TD>
</TR>
<TR bgcolor=#efefef valign=top><TD><A href="ifps3utl.htm#MaxListSize">MaxListSize</A></TD>
<TD><A href="ifps3utl.htm">ifps3utl</A></TD>
<TD>Maximum number of items in a list</TD>
</TR>
</TABLE>
</BODY>
</HTML>
