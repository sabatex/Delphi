<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<META name="GENERATOR" content="DIPasDoc 0.8.6">
<TITLE>Innerfuse Pascal Script: ifpidateutils</TITLE>
<LINK rel="StyleSheet" href="Help.css">
</HEAD>
<BODY bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#800080" alink="#FF0000">
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor="e0e0e0">
<TD><A href="AllUnits.htm"><CENTER>Units</CENTER></A></TD>
<TD><A href="AllClasH.htm"><CENTER>Class Hierarchy</CENTER></A></TD>
<TD><A href="AllClass.htm"><CENTER>Classes, Interfaces and Objects</CENTER></A></TD>
<TD><A href="AllTypes.htm"><CENTER>Types</CENTER></A></TD>
<TD><A href="AllVaria.htm"><CENTER>Variables</CENTER></A></TD>
<TD><A href="AllConst.htm"><CENTER>Constants</CENTER></A></TD>
<TD><A href="AllFuncs.htm"><CENTER>Functions and Procedures</CENTER></A></TD>
<TD><A href="AllIdent.htm"><CENTER>Identifiers</CENTER></A></TD>
</TR>
</TABLE>
<H1>Unit ifpidateutils</H1>
<H2>Description</H2>
Compile time Date Time library<P>Innerfuse Pascal Script III Copyright (C) 2000-2004 by Carlo Kok (ck@carlo-kok.com)<H2>Functions and Procedures</H2>
<H3>Overview</H3>
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><CODE>procedure <A href="#RegisterDateTimeLibrary_C"><B>RegisterDateTimeLibrary_C</B></A>(S: <A href="TIFPSPascalCompiler.htm">TIFPSPascalCompiler</A>);</CODE></TD>
</TR>
</TABLE>
<H3>Description</H3>
<TABLE cellspacing=2 cellpadding=4 width=100%>
<TR bgcolor=#efefef valign=top><TD width=100%><A name="RegisterDateTimeLibrary_C"><CODE>procedure <B>RegisterDateTimeLibrary_C</B>(S: <A href="TIFPSPascalCompiler.htm">TIFPSPascalCompiler</A>);</CODE></A></TD>
</TR>
</TABLE>
<P>Register the compiler pare of the Datetime library<br> <tt> TDateTime = double;<br> <br> function EncodeDate(Year, Month, Day: Word): TDateTime;<br> function EncodeTime(Hour, Min, Sec, MSec: Word): TDateTime;<br> function TryEncodeDate(Year, Month, Day: Word; out Date: TDateTime): Boolean;<br> function TryEncodeTime(Hour, Min, Sec, MSec: Word; out Time: TDateTime): Boolean;<br> procedure DecodeDate(const DateTime: TDateTime; var Year, Month, Day: Word);<br> procedure DecodeTime(const DateTime: TDateTime; var Hour, Min, Sec, MSec: Word);<br> function DayOfWeek(const DateTime: TDateTime): Word;<br> function Date: TDateTime;<br> function Time: TDateTime;<br> function Now: TDateTime;<br> function DateTimeToUnix(D: TDateTime): Int64;<br> function UnixToDateTime(U: Int64): TDateTime;<br> function DateToStr(D: TDateTime): string;<br> function StrToDate(const s: string): TDateTime;<br> function FormatDateTime(const fmt: string; D: TDateTime): string;<br></P>
<H2>Author</H2>
<P>Carlo Kok <<A href="mailto:ck@carlo-kok.com">ck@carlo-kok.com</A>></P>
</BODY>
</HTML>
